provider "aws" {
 
 region = "us-east-1"
}

resource "aws_default_network_acl" "default" {
  default_network_acl_id = aws_vpc.MustafaTest.default_network_acl_id

  ingress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = aws_vpc.MustafaTest.cidr_block
    from_port  = 0	
    to_port    = 0
  }

  egress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = "0.0.0.0/0"
    from_port  = 0
    to_port    = 0
  }
}
resource "aws_network_acl" "main" {
  vpc_id = "${aws_vpc.MustafaTest.id}"

  egress {
    protocol   = "tcp"
    rule_no    = 200
    action     = "allow"
    cidr_block = "10.0.0.0/16"
    from_port  = 443
    to_port    = 443
  }

  ingress {
    protocol   = "tcp"
    rule_no    = 100
    action     = "allow"
    cidr_block = "10.0.0.0/16"
    from_port  = 80
    to_port    = 80
  }

  tags = {
    Name = "main"
  }
}
resource "aws_route_table" "r" {
  vpc_id = "${aws_vpc.MustafaTest.id}"
  
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.gw.id}"
  }
 
  }

resource "aws_flow_log" "myTest" {
  iam_role_arn    = "${aws_iam_role.myTest.arn}"
  log_destination = "${aws_cloudwatch_log_group.myTest.arn}"
  traffic_type    = "ALL"
  vpc_id          = "${aws_vpc.MustafaTest.id}"
}

resource "aws_cloudwatch_log_group" "myTest" {
  name = "myTest"
}

resource "aws_iam_role" "myTest" {
  name = "myTest"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "",
      "Effect": "Allow",
      "Principal": {
        "Service": "vpc-flow-logs.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy" "myTest" {
  name = "myTest"
  role = "${aws_iam_role.myTest.id}"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
EOF
}
resource "aws_flow_log" "bucketgazi" {
  log_destination      = "${aws_s3_bucket.bucketgazi.arn}"
  log_destination_type = "s3"
  traffic_type         = "ALL"
  vpc_id               = "${aws_vpc.MustafaTest.id}"
}

resource "aws_s3_bucket" "bucketgazi" {
  bucket = "bucketgazi"
}
resource "aws_vpc" "MustafaTest" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = true
}

resource "aws_internet_gateway" "gw" {
  vpc_id = "${aws_vpc.MustafaTest.id}"
}

resource "aws_subnet" "tf_public_subneta"{
  vpc_id                  = "${aws_vpc.MustafaTest.id}"
  cidr_block              = "10.0.0.0/24"
  map_public_ip_on_launch = true 
  availability_zone = "us-east-1a"

  depends_on = ["aws_internet_gateway.gw"]
  tags = {
    Name = "public_subnet1"
  }
}
resource "aws_subnet" "tf_public_subnetb"{
  vpc_id                  = "${aws_vpc.MustafaTest.id}"
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = true
  availability_zone = "us-east-1b"
depends_on = ["aws_internet_gateway.gw"]
  tags = {
    Name = "public_subnet2"
  }

}
resource "aws_subnet" "tf_private_subneta" {
  vpc_id                  = "${aws_vpc.MustafaTest.id}"
  cidr_block              = "10.0.3.0/24"
  map_public_ip_on_launch = true
  availability_zone = "us-east-1a"
depends_on = ["aws_internet_gateway.gw"]
  tags = {
    Name = "private_subnet2"
  }
  }
resource "aws_subnet" "tf_private_subnetb" {
  vpc_id                  = "${aws_vpc.MustafaTest.id}"
  cidr_block              = "10.0.4.0/24"
  map_public_ip_on_launch = true
  availability_zone = "us-east-1b"
depends_on = ["aws_internet_gateway.gw"]
  tags = {
    Name = "private_subnet2"
  }
  }
resource "aws_eip" "bar" {
  vpc = true
  associate_with_private_ip = "10.0.0.12"
  depends_on                = ["aws_internet_gateway.gw"]
}
resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.tf_public_subneta.id
  route_table_id = aws_route_table.r.id
}
resource "aws_security_group" "allow_tls" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic"
  vpc_id      = "${aws_vpc.MustafaTest.id}"

  ingress {
    description = "TLS from VPC"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = [aws_vpc.MustafaTest.cidr_block]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}
resource "aws_vpc_dhcp_options" "dns_resolver" {
  domain_name_servers = ["8.8.8.8", "8.8.4.4"]
}
resource "aws_vpc_dhcp_options_association" "dns_resolver" {
  vpc_id          = "${aws_vpc.MustafaTest.id}"
  dhcp_options_id = "${aws_vpc_dhcp_options.dns_resolver.id}"
}
resource "aws_vpc_endpoint" "s3" {
  vpc_id       = "${aws_vpc.MustafaTest.id}"
  service_name = "com.amazonaws.us-east-1.s3"

  tags = {
    Environment = "endopinttest"
  }
}
